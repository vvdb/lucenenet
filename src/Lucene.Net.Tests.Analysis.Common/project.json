{
  "version": "4.8.0",
  "title": "Lucene.Net.Tests.Analysis.Common",
  "buildOptions": {
    "compile": {
      "includeFiles": [ "../CommonAssemblyInfo.cs" ]
    },
    "embed": {
      "includeFiles": [
        "Analysis/En/porterTestData.zip",
        "Analysis/En/kstemTestData.zip",
        "Analysis/Snowball/TestSnowballVocabData.zip",
        "Analysis/Fr/frlighttestdata.zip",
        "Analysis/Fr/frminimaltestdata.zip",
        "Analysis/De/delighttestdata.zip",
        "Analysis/De/deminimaltestdata.zip",
        "Analysis/Es/eslighttestdata.zip",
        "Analysis/Ru/rulighttestdata.zip",
        "Analysis/Ckb/ckbtestdata.zip",
        "Analysis/Fi/filighttestdata.zip",
        "Analysis/Gl/gltestdata.zip",
        "Analysis/Pt/ptlighttestdata.zip",
        "Analysis/Pt/ptminimaltestdata.zip",
        "Analysis/Pt/ptrslptestdata.zip",
        "Analysis/Hu/hulighttestdata.zip",
        "Analysis/It/itlighttestdata.zip",
        "Analysis/Sv/svlighttestdata.zip",
        "Analysis/Hunspell/broken-flags.aff",
        "Analysis/Hunspell/broken.aff",
        "Analysis/Hunspell/circumfix.aff",
        "Analysis/Hunspell/circumfix.dic",
        "Analysis/Hunspell/complexprefix.aff",
        "Analysis/Hunspell/complexprefix.dic",
        "Analysis/Hunspell/compressed-before-set.aff",
        "Analysis/Hunspell/compressed-empty-alias.aff",
        "Analysis/Hunspell/compressed.aff",
        "Analysis/Hunspell/compressed.dic",
        "Analysis/Hunspell/condition.aff",
        "Analysis/Hunspell/condition.dic",
        "Analysis/Hunspell/conv.aff",
        "Analysis/Hunspell/conv.dic",
        "Analysis/Hunspell/dependencies.aff",
        "Analysis/Hunspell/dependencies.dic",
        "Analysis/Hunspell/escaped.aff",
        "Analysis/Hunspell/escaped.dic",
        "Analysis/Hunspell/flaglong.aff",
        "Analysis/Hunspell/flaglong.dic",
        "Analysis/Hunspell/flagnum.aff",
        "Analysis/Hunspell/flagnum.dic",
        "Analysis/Hunspell/homonyms.aff",
        "Analysis/Hunspell/homonyms.dic",
        "Analysis/Hunspell/ignore.aff",
        "Analysis/Hunspell/ignore.dic",
        "Analysis/Hunspell/mixedcase.dic",
        "Analysis/Hunspell/morph.aff",
        "Analysis/Hunspell/morph.dic",
        "Analysis/Hunspell/optional-condition.aff",
        "Analysis/Hunspell/simple.aff",
        "Analysis/Hunspell/simple.dic",
        "Analysis/Hunspell/twofold.aff",
        "Analysis/Hunspell/twosuffixes.aff",
        "Analysis/Hunspell/twosuffixes.dic",
        "Analysis/Core/stop-1.txt",
        "Analysis/Core/stop-2.txt",
        "Analysis/Core/stop-snowball.txt",
        "Analysis/Core/urls.from.random.text.with.urls.txt",
        "Analysis/Core/email.addresses.from.random.text.with.email.addresses.txt",
        "Analysis/Core/LuceneResourcesWikiPage.html",
        "Analysis/Core/LuceneResourcesWikiPageURLs.txt",
        "Analysis/Core/random.text.with.email.addresses.txt",
        "Analysis/Core/random.text.with.urls.txt",
        "Analysis/Core/stoptypes-1.txt",
        "Analysis/Core/stoptypes-2.txt",
        "Analysis/CharFilters/htmlStripReaderTest.html",
        "Analysis/CharFilters/MS-Word14generated.htm",
        "Analysis/Cz/customStopWordFile.txt",
        "Analysis/Synonym/synonyms-wordnet.txt",
        "Analysis/Synonym/synonyms.txt",
        "Analysis/Miscellaneous/keep-1.txt",
        "Analysis/Miscellaneous/keep-2.txt",
        "Analysis/Util/frenchArticles.txt",
        "Analysis/De/data.txt",
        "Analysis/No/nb_light.txt",
        "Analysis/No/nb_minimal.txt",
        "Analysis/No/nn_light.txt",
        "Analysis/No/nn_minimal.txt",
        "Analysis/Compound/compoundDictionary.txt",
        "Analysis/Compound/da_UTF8.xml",
        "Analysis/Compound/da_compoundDictionary.txt"
      ]
    }
  },
  "dependencies": {
    "dotnet-test-nunit-teamcity": "3.4.0-beta-3",
    "Lucene.Net.Analysis.Common": "4.8.0",
    "Lucene.Net.TestFramework": "4.8.0",
    "NETStandard.Library": "1.6.0",
    "NUnit": "3.5.0"
  },
  "testRunner": "nunit-teamcity",
  "frameworks": {
    "netcoreapp1.0": {
      "buildOptions": {
        "debugType": "portable",
        "define": [ "NETSTANDARD" ]
      },
      "imports": "dnxcore50"
    },
    "net451": {
      "buildOptions": {
        "debugType": "full",
        "define": [ "FEATURE_SERIALIZABLE" ]
      }
    }
  },

  "runtimes": {
    "win7-x86": {},
    "win7-x64": {}
  }
}
